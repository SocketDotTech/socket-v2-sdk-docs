"use strict";(self.webpackChunksocket_v2_sdk_docs=self.webpackChunksocket_v2_sdk_docs||[]).push([[3902],{3905:function(e,t,n){n.d(t,{Zo:function(){return d},kt:function(){return f}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function u(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=r.createContext({}),s=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},d=function(e){var t=s(e.components);return r.createElement(c.Provider,{value:t},e.children)},l={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,c=e.parentName,d=u(e,["components","mdxType","originalType","parentName"]),p=s(n),f=o,m=p["".concat(c,".").concat(f)]||p[f]||l[f]||i;return n?r.createElement(m,a(a({ref:t},d),{},{components:n})):r.createElement(m,a({ref:t},d))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=p;var u={};for(var c in t)hasOwnProperty.call(t,c)&&(u[c]=t[c]);u.originalType=e,u.mdxType="string"==typeof e?e:o,a[1]=u;for(var s=2;s<i;s++)a[s]=n[s];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"},5731:function(e,t,n){n.r(t),n.d(t,{assets:function(){return d},contentTitle:function(){return c},default:function(){return f},frontMatter:function(){return u},metadata:function(){return s},toc:function(){return l}});var r=n(7462),o=n(3366),i=(n(7294),n(3905)),a=["components"],u={sidebar_position:5},c="Continue a route",s={unversionedId:"guides/continue-route",id:"guides/continue-route",title:"Continue a route",description:"In certain circumstances, you may be required to continue a route that was started.",source:"@site/docs/guides/continue-route.md",sourceDirName:"guides",slug:"/guides/continue-route",permalink:"/socket-v2-sdk-docs/guides/continue-route",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/guides/continue-route.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"tutorialSidebar",previous:{title:"Executing with Web3 Provider",permalink:"/socket-v2-sdk-docs/guides/web3-provider-execute"},next:{title:"API Reference",permalink:"/socket-v2-sdk-docs/category/api-reference"}},d={},l=[{value:"Finding the active route ID",id:"finding-the-active-route-id",level:2},{value:"Continuing the route",id:"continuing-the-route",level:2}],p={toc:l};function f(e){var t=e.components,n=(0,o.Z)(e,a);return(0,i.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"continue-a-route"},"Continue a route"),(0,i.kt)("p",null,"In certain circumstances, you may be required to continue a route that was started."),(0,i.kt)("p",null,"You will need the ",(0,i.kt)("inlineCode",{parentName:"p"},"activeRouteId")," for the route to continue."),(0,i.kt)("p",null,"When starting a route using ",(0,i.kt)("inlineCode",{parentName:"p"},"socket.start(...)")," the ",(0,i.kt)("inlineCode",{parentName:"p"},"activeRouteId")," is returned. In the case that it is no longer available, there are ways to find it."),(0,i.kt)("h2",{id:"finding-the-active-route-id"},"Finding the active route ID"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"../reference/sdk/Socket#getactiveroutes"},(0,i.kt)("inlineCode",{parentName:"a"},"getActiveRoutes"))," can be used to find active routes."),(0,i.kt)("p",null,"For example to retrieve by the user address:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},'const activeRoutes = socket.getActiveRoutes({\n  userAddress: "0xd8da6bf26964af9d7eed9e03e53415d37aa96045",\n});\n\nconst route = activeRoutes.find(\n  (route) => route.fromChainId === ChainId.MAINNET_CHAIN_ID\n);\n\nconsole.log(route.activeRouteId);\n')),(0,i.kt)("h2",{id:"continuing-the-route"},"Continuing the route"),(0,i.kt)("p",null,"Call ",(0,i.kt)("inlineCode",{parentName:"p"},"socket.continue")," with the ",(0,i.kt)("inlineCode",{parentName:"p"},"activeRouteId"),". The process is continued with the same interface as ",(0,i.kt)("inlineCode",{parentName:"p"},"socket.start"),"."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"await socket.continue(activeRouteId);\n...\n")))}f.isMDXComponent=!0}}]);